// memoization 기능은 이렇게 하나의 페이지를 렌더링 하는 동안에만
// 존재하는 캐시로서 오직 중복된 API 요청을 방지하는 데에만 그 목적을 두고 있다.
// 반면에 데이터 캐쉬의 경우에는 그 목적 자체가 리퀘스트(요청) 메모이제이젼과 다르다.
// 데이터 캐쉬의 목적은 백에드 서버로부터 불러온 데이터를 거의 영구적으로 보관하기 위해서 존재
// 그렇기 때문에 데이터 캐쉬에 저장된 캐쉬 데이터들은 서버가 중단되기 전까지 영구적으로 보관이 된다.

// 리퀘스트 메모이제이션을 제공하는 이유는?
// 서버컨포넌트의 도입으로 인해서 이제는 데이터를 패칭하는 패턴이 변화했기 때문에

// 동일한 API 요청이 여러 번 발생하는 경우에 불필요한 네트워크 요청을 줄이기 위해서이다.
// 예를 들어, 어떤 페이지에서 동일한 API 요청이 여러 컴포넌트에서 발생하는 경우,
// 리퀘스트 메모이제이션을 사용하면 첫 번째 요청 이후에는 캐시된 응답을 재사용하여
// 네트워크 트래픽을 줄이고 페이지 로딩 속도를 향상시킬 수 있다.

// 리퀘스트 메모이제이션은 주로 다음과 같은 상황에서 유용하다:
// 1. 동일한 데이터에 대한 중복 요청이 발생하는 경우
// 2. 네트워크 대역폭이 제한적인 환경에서 불필요한 요청을 줄이고자 할 때
// 3. 사용자 경험을 향상시키기 위해 빠른 응답이 필요한 경우

// 요약하자면, 리퀘스트 메모이제이션은 페이지 렌더링 동안에만 존재하는 임시 캐시로서,
// 동일한 API 요청에 대해 중복된 네트워크 요청을 방지하는 데에 목적이 있다.
// 반면에 데이터 캐쉬는 데이터를 영구적으로 보관하기 위한 목적으로 존재한다.
